from datetime import datetime

import pandas as pd
import pytest

from src.views import get_top_five_transactions


def test_positive_result():
    """ Тестирование если df и date корректные """
    df = pd.DataFrame([
        {"Категория": "Супермаркет", "Сумма операции": -1211.03,
         "Дата операции": "10.11.2024 23:32:01", "Описание": "Пятерочка"},
        {"Категория": "Каршеринг", "Сумма операции": -893.56,
         "Дата операции": "08.11.2024 23:32:01", "Описание": "ЯндексДрайв"},
        {"Категория": "Перевод", "Сумма операции": -5000,
         "Дата операции": "06.11.2024 23:32:01", "Описание": "Перевод"},
        {"Категория": "Перевод", "Сумма операции": -10000,
         "Дата операции": "05.11.2024 23:32:01", "Описание": "Перевод"},
        {"Категория": "Аптека", "Сумма операции": -2136.29,
         "Дата операции": "01.11.2024 23:32:01", "Описание": "Столички"},
        {"Категория": "Супермаркет", "Сумма операции": -2432.32,
         "Дата операции": "01.11.2024 23:32:01", "Описание": "ВкусВилл"},
        {"Категория": "Перевод", "Сумма операции": -15000,
         "Дата операции": "10.10.2024 23:32:01", "Описание": "Перевод"},
    ])

    date = datetime.strptime("2024.11.11", "%Y.%m.%d").date()
    result = get_top_five_transactions(df, date)

    assert result == [{'amount': 10000.0, 'category': 'Перевод', 'date': '05.11.2024', 'description': 'Перевод'},
                      {'amount': 5000.0, 'category': 'Перевод', 'date': '06.11.2024', 'description': 'Перевод'},
                      {'amount': 2432.32, 'category': 'Супермаркет', 'date': '01.11.2024', 'description': 'ВкусВилл'},
                      {'amount': 2136.29, 'category': 'Аптека', 'date': '01.11.2024', 'description': 'Столички'},
                      {'amount': 1211.03, 'category': 'Супермаркет', 'date': '10.11.2024', 'description': 'Пятерочка'}]



def test_not_data_for_the_month():
    """ Тестирование если df и date корректные """
    df = pd.DataFrame([
        {"Категория": "Супермаркет", "Сумма операции": -1211.03,
         "Дата операции": "10.11.2024 23:32:01", "Описание": "Пятерочка"},
        {"Категория": "Каршеринг", "Сумма операции": -893.56,
         "Дата операции": "08.11.2024 23:32:01", "Описание": "ЯндексДрайв"},
        {"Категория": "Перевод", "Сумма операции": -5000,
         "Дата операции": "06.11.2024 23:32:01", "Описание": "Перевод"},
        {"Категория": "Перевод", "Сумма операции": -10000,
         "Дата операции": "05.11.2024 23:32:01", "Описание": "Перевод"},
        {"Категория": "Аптека", "Сумма операции": -2136.29,
         "Дата операции": "01.11.2024 23:32:01", "Описание": "Столички"},
        {"Категория": "Супермаркет", "Сумма операции": -2432.32,
         "Дата операции": "01.11.2024 23:32:01", "Описание": "ВкусВилл"},
        {"Категория": "Перевод", "Сумма операции": -15000,
         "Дата операции": "10.10.2024 23:32:01", "Описание": "Перевод"},
    ])

    date = datetime.strptime("2024.09.11", "%Y.%m.%d").date()
    result = get_top_five_transactions(df, date)

    assert result == []



def test_incorrect_date():
    """ Тестирование при неправильном формате date """
    df = pd.DataFrame([{"Номер карты": "*7228", "Сумма операции": -10, "Дата операции": "10.10.2024 23:32:01"}])
    date = datetime.strptime("2024.11.11", "%Y.%m.%d")

    with pytest.raises(TypeError, match="Не корректные данные"):
        get_top_five_transactions(df, date)


def test_empty_list_with_df():
    """ Тестирование при пустом листе в df """
    df = pd.DataFrame([])
    date = datetime.strptime("2024.11.11", "%Y.%m.%d").date()
    result = get_top_five_transactions(df, date)

    assert result == []


def test_empty_df():
    """ Тестирование при пустом df """
    df = pd.DataFrame(None)
    date = datetime.strptime("2024.11.11", "%Y.%m.%d").date()
    result = get_top_five_transactions(df, date)

    assert result == []